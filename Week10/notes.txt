Instructor notes


* students struggle with creating object-oriented designs



Python Game -OO


* blocks
* ball
* paddle
* outline
* overlay

-> all builds a ... game



Relationships

* block
-health
-color
+hit()
-changeColor()

*Paddle
-width
-speed
+left()
+update()
+right()

*Game
-score
-numbeOfLines
+run()

*Ball
-update
-velocity x + y
// optional
-color
-size 

*Overlay
-> who's in charge of overlay (overlay is in charge of it's own state, but who gives it info?)
-Game is in charge
	-> tells overlay to do something through getters and setters
-setText(str)

-----------------------------------

block.health -> many to one <- Game
block.color -> many to one <- Game

Ball -> n to 1 <- Game

paddle.width -> 1 to 1 <- Game
paddle.speed -> 1 to 1 <- Game

overlay -> 1 to 1 <- Game

-----------------------------------

*pygame.sprite.Sprite
-image
-rectangle
--includes position, width, and height

*pygame sprite Sprite groups
-collision
-----------------------------------

Need 2 methods

*draw 
*update

----------------------------------
Need multiple methods
Assume constructors are included

The goal is reusability

----------------------------------


